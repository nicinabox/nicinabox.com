<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Nic Aitch]]></title>
  <link href="http://nicinabox.com/atom.xml" rel="self"/>
  <link href="http://nicinabox.com/"/>
  <updated>2013-05-05T13:25:15-05:00</updated>
  <id>http://nicinabox.com/</id>
  <author>
    <name><![CDATA[Nic Aitch]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[shortcode.js]]></title>
    <link href="http://nicinabox.com/blog/shortcode-dot-js/"/>
    <updated>2012-11-16T19:42:00-06:00</updated>
    <id>http://nicinabox.com/blog/shortcode-dot-js</id>
    <content type="html"><![CDATA[<h4>If you know about Wordpress&#8217; shortcodes, then this should already be familiar to you. In any case, read on my gallant friend.</h4>

<!-- more -->


<p>[overview]</p>

<h2>What is it?</h2>

<p>From the Wordpress Shortcode API:</p>

<blockquote><p>It enables plugin developers to create special kinds of content (e.g. forms, content generators) that users can attach to certain pages by adding the corresponding shortcode into the page text.</p></blockquote>


<p><a href="https://github.com/nicinabox/shortcode.js">shortcode.js</a> is similar, except it&#8217;s JavaScript based and it works basically anywhere. It&#8217;s essentially a modular find-and-replace in the page. You find the shortcode, then replace it with something that can be added via JavaScript&#8211;pretty much anything. You could add a form, gallery, table of contents, or some special functionality to the page just with <code>[gallery id="123"]</code>.</p>

<h2>How does it help?</h2>

<p>It&#8217;s very useful in the case where one might be using a typical WYSIWG/M editor. Many editors don&#8217;t support (or make it very difficult) to add rich functionality. Since the placeholder shortcode is just a string, an editor won&#8217;t try to do anything to it.</p>

<p>By shifting the replacement to the frontend, not only does the action happen asynchronously, it works in pretty much any environment. You&#8217;re not locked down to this backend language or that one. Honey badger don&#8217;t care. You will need jQuery, however (a future version could easily remove this dependency).</p>

<h2>Demo</h2>

<p><strong>You&#8217;re looking at it!</strong> The section overview at the top is generated from the <code>h2</code>s on the page. View the source to the see the actual implementation, or <a href="https://github.com/nicinabox/shortcode.js">check out the docs on Github</a>.</p>

<script src="https://rawgithub.com/nicinabox/shortcode.js/master/dist/jquery.shortcode.js"></script>


<script src="https://rawgithub.com/nicinabox/shortcode.js/master/dist/jquery.shortcode.services.js"></script>




<script type="text/javascript">
  $('#main').shortcode();
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Superslides 0.4.1 Released]]></title>
    <link href="http://nicinabox.com/blog/superslides-0-dot-4-1-released/"/>
    <updated>2012-10-19T10:09:00-05:00</updated>
    <id>http://nicinabox.com/blog/superslides-0-dot-4-1-released</id>
    <content type="html"><![CDATA[<p>I&#8217;ve released an update for <a href="http://nicinabox.github.com/superslides/">Superslides</a> that includes some bugfixes for mobile/responsive and  a couple new features (scrollable content and additional non-fullscreen images).</p>

<p>Your feedback is always welcome!</p>

<p><a href="http://nicinabox.github.com/superslides/" class="button radius">Demo</a>
<a href="https://github.com/nicinabox/superslides/blob/master/changelog.md" class="button radius secondary">Changelog</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How Hatchpass Works]]></title>
    <link href="http://nicinabox.com/blog/how-hatchpass-works/"/>
    <updated>2012-09-25T20:45:00-05:00</updated>
    <id>http://nicinabox.com/blog/how-hatchpass-works</id>
    <content type="html"><![CDATA[<h4><a href="http://beta.hatchpass.org">Hatchpass</a> is a password tool I built to help with the password problem&#8211;or, using the same password everywhere. It creates complex, pseudo-random, unique passwords. You don&#8217;t have to remember any of them.</h4>

<!-- more -->


<p><img src="http://nicinabox.com/images/posts/hatchpass.png"></p>

<p>Now, many would say that the the only way to solve the password problem is to absolve passwords altogether. And, while this is probably true, they&#8217;re not going away any time soon.</p>

<p>It&#8217;s very common that users will reuse the same password across the web on accounts varying security, from banks to Myspace. The problem is that if any one account is compromised, an attacker could have access to any number of different accounts, including high risk ones.</p>

<h2>How is this different than LastPass, 1Password, etc?</h2>

<p>These 3rd party services store your password. That makes them inherently untrustworthy. Hatchpass does not store anything. Since you can easily recreate <strong>your</strong> passwords, storage is an unnecessary risk.</p>

<p>There is no sign up, no account, no &#8220;user&#8221;. You simply use it.</p>

<p>They also generate actual random passwords. Since they&#8217;re random, they have to be stored. You can&#8217;t get that random password again.</p>

<h2>I get it. How does this help me?</h2>

<p>Hatchpass generates unique passwords. The passwords aren&#8217;t <em>randomly</em> generated, however. They&#8217;re mathematically created based on an algorithm. By combining the same pieces of information (a key, password, and domain), you&#8217;ll always get the same generated password.</p>

<p><img src="http://nicinabox.com/images/posts/hatchpass-settings.png"></p>

<p>Let me explain more about these pieces.</p>

<h3>The key</h3>

<p>Upon visiting, a pseudo-random key will be generated for you. It&#8217;s a 5 character string based on the time you visited (to the millisecond). This key is effectively unique to you and helps randomize the algorithm.</p>

<h3>The master password</h3>

<p>This is what makes Hatchpass easy to use. If you&#8217;re already using the same password on every site, this is all you really need to remember. Hatchpass basically translates this (probably simple) password into a complex password. You aren&#8217;t expected to remember the generated passwords, you can always comeback and regenerate it.</p>

<p>Remember, the best kept secret is one nobody knows.</p>

<h3>The domain</h3>

<p>This is the site you want to log in to. Once you type your password and the domain, a password will be created on the fly. <strong>For a given key, password, and domain, you will always get the same password.</strong></p>

<p>This is important. Remember, the generated passwords <strong>aren&#8217;t random</strong>. They&#8217;re mathematically recreatable with the information you provided. Since your password (and probably key) are secret, you don&#8217;t need to worry about someone having the same generated password as you. The key randomizes this.</p>

<h2>But, security!</h2>

<p>Hatchpass is a JavaScript application (Backbone to be exact). It has no database. In fact, nothing is ever even sent to the server. Once you&#8217;ve loaded the page, all calculations are done <strong>in your browser</strong>.</p>

<p>localStorage is utilized to save settings and recent domains. If you&#8217;re unfamiliar with localStorage, this means that everything is stored right in your browser, similar to a cookie. It&#8217;s not a cookie, however, and won&#8217;t be cleared if you clear your cookies.</p>

<p>It can&#8217;t be accessed by other sites or applications. It&#8217;s specific to the Hatchpass domain and only it can see the settings.</p>

<p><img src="http://nicinabox.com/images/posts/hatchpass-recent.png"></p>

<h2>Okay, but how do I use it?</h2>

<p>When you register on a site, open up Hatchpass, type the domain name, and copypasta the password into the registration form. Whenever you want to login again, open Hatchpass, type the domain, copypasta. Easy peasy.</p>

<p><img src="http://nicinabox.com/images/posts/hatchpass-generated.png"></p>

<p>Yes, it&#8217;s a little tedious. Make it a habit and you&#8217;ll be used to it in no time. Your real life is at stake here.</p>

<h2>Tips</h2>

<ul>
<li><p><strong>Save your settings</strong> unless you&#8217;re on a public computer. View the Settings pane and turn on &#8220;Save All&#8221;. This will save all your settings and your master password. Upon subsequent visits, all you need to do is type the domain you want to log in to.</p></li>
<li><p><strong>Bookmark it</strong> and put it in your url bar, or some place convenient. If you use an iPhone, save it on your homescreen. It&#8217;s a fullscreen, touch enabled web app.</p></li>
<li><p><strong>Memorize your key.</strong> If you are away from your computer and you need to login to a site that you&#8217;ve used Hatchpass to generate the password with, the key and the master password are the most critical pieces of information. You can&#8217;t get the same password without them.</p></li>
</ul>


<h2>That&#8217;s all!</h2>

<p>I&#8217;ve been using Hatchpass daily for over a couple years now. I&#8217;d love to hear your feedback if you&#8217;re using it (or if you&#8217;re not). I know it&#8217;s not a perfect solution, but it&#8217;s an area that needs improvement.</p>

<p><a class="button radius expand" href="http://beta.hatchpass.org">Try it out &rarr;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Superslides: A fullscreen jQuery slider]]></title>
    <link href="http://nicinabox.com/blog/superslides-a-fullscreen-jquery-slider/"/>
    <updated>2012-09-22T11:31:00-05:00</updated>
    <id>http://nicinabox.com/blog/superslides-a-fullscreen-jquery-slider</id>
    <content type="html"><![CDATA[<h4>Back in April 2012 I started working on a fullscreen JavaScript slider called <a href="http://nicinabox.github.com/superslides/">Superslides</a>. It&#8217;s had some interest, so I wanted to officially announce it here.</h4>

<!-- more -->


<p>So, yeah, it&#8217;s just what it sounds like: a full screen slider (or carousel if you prefer that). I wasn&#8217;t happy with the current state of fullscreen sliders. Supersized is bloated and hasn&#8217;t been updated in quite a while. It was cumbersome to work with and didn&#8217;t fit my needs, so I began work on this project. It&#8217;s light (only 4kb) and easy to use. Check of the documentation on Github.</p>

<p>One of my goals for this project is that it stays light on features. There&#8217;s not something for everyone. It&#8217;s horizontal slider and its fullscreen. Instead, I gave a lot of attention to performance and control. It&#8217;s got support for hardware acceleration in lacking browsers and a sweet API that you can hook in to.</p>

<p>I&#8217;ve learned a lot about JavaScript on this project. When I find something that could make the code clearer or the API easier to use, I&#8217;ll release and update. I regularly maintain it and respond to issues on <a href="https://github.com/nicinabox/superslides">Github</a>.</p>

<p>If you&#8217;ve used it or want to give feedback (please do!), suggest a feature, note a bug, or whatehaveyou, just post an issue on Github.</p>

<p>Enjoy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dive Deeper Into Octopress]]></title>
    <link href="http://nicinabox.com/blog/dive-deeper-into-octopress/"/>
    <updated>2012-09-21T23:20:00-05:00</updated>
    <id>http://nicinabox.com/blog/dive-deeper-into-octopress</id>
    <content type="html"><![CDATA[<p>I&#8217;ve redesigned <em>yet again</em>. This time, however, taking a much closer look at how Jekyll and Liquid actually work.</p>

<!-- more -->


<p>My biggest gripe about Octopress is that it seems to have so much extra stuff. Strange, especially for a simple static site generator.</p>

<p>I was able to pull out lots, slimming the codebase immensely. I added Foundation in for a simple grid, modular scale, and some other helpful variables.</p>

<p>I know I can slim it down further, but that is another task for another day. Like, maybe tomorrow.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why I Use Foundation Over Bootstrap]]></title>
    <link href="http://nicinabox.com/blog/why-i-use-foundation-over-bootstrap/"/>
    <updated>2012-06-30T08:11:00-05:00</updated>
    <id>http://nicinabox.com/blog/why-i-use-foundation-over-bootstrap</id>
    <content type="html"><![CDATA[<p>When discussing or suggesting <a href="http://foundation.zurb.com/">Foundation</a> over <a href="http://twitter.github.com/bootstrap">Twitter Bootstrap</a> I often get responses like &#8220;Why bother?&#8221;, or &#8220;Why reinvent the wheel?&#8221;, or whatever. Having deep-dived into the code of both of these frameworks, let me tell you what I like and dislike about them and why I ultimately chose Foundation.</p>

<!-- more -->


<h2>Software is opinionated</h2>

<p>There are few topics that you can find such strong opinions on how things should be done. Politics and software are two of them. The beautiful thing about software is, if you don&#8217;t like the way something is done, you can make your own.</p>

<p>Foundation and Bootstrap are built on opinions. These opinions include things like how a boilerplate framework should be tooled, what a boilerplate framework should include, how a responsive grid should work, naming conventions, and what browsers should be supported. And thats just a small handful of things! The decisions that go into building a framework like this have some serious thought.</p>

<p>Now, I feel like I owe you a confession right here. I come from the Ruby community and if you know anything about Rubyists, they&#8217;re a pretty opinionated bunch. So, agree or disagree with the what you&#8217;re about to read, you should take it with a grain of salt anyway.</p>

<h2>Tooling</h2>

<p>Chris Coyier has a great post on <a href="http://css-tricks.com/sass-vs-less/">SASS vs LESS</a> and why you should be using SASS over LESS. I&#8217;m not going to dive into a comparison of the two, but ultimately I feel that SASS is superior to LESS in a lot of ways (that post illustrates them nicely). SASS fits better into the Terminal/Editor workflow, at least in my experience. It&#8217;s seamless with Ruby. This makes it very easy to use not only SASS, but also Compass, Bourbon, or other Compass/SASS modules. I like when tools work for me, and SASS does that.</p>

<p>Foundation 3 is built with SASS, while Bootstrap is built with LESS. Foundation&#8217;s ability to integrate with Sinatra, Rails, or a basic Rack app makes integration faster. It&#8217;s mixins and functions allow you to create rows and columns without cluttering up your markup. Bootstrap uses <code>.span1</code> on columns to set their widths. Not exactly semantic compared to Foundation&#8217;s <code>.one.column</code>.</p>

<h2>Bundled packages</h2>

<p>You may have noticed that Foundation doesn&#8217;t include a whole heap of JavaScript plugins. That&#8217;s a good thing! I use a few of Bootstrap&#8217;s plugins frequently (specifically Dropdowns, Tooltips, Popovers, and Alert messages). They are excellently crafted and they work &#8220;pretty well&#8221; outside of Bootstrap.</p>

<p>Foundation assumes less about your project, your style, and your design. I prefer this to Bootstrap&#8217;s philosophy of &#8220;make everything look like Bootstrap&#8221;.At least, that seems to be what it&#8217;s philosophy is.</p>

<h2>Flexibility</h2>

<p>They both include a lot of similar type things: a responsive grid, typography, buttons, forms, and UI elements. I find Foundation&#8217;s elements to be better crafted, more flexible, and assume less. Bootstrap tends to what you to do everything in Bootstrap, and I don&#8217;t really care for that. I want to be able to use my own style (or house style) without a framework telling me what to do.</p>

<p>There have been many instances where, trying to use elements from Bootstrap, it wanted the exact markup structure from Bootstrap as well. I don&#8217;t necessarily write my markup like Bootstrap does and I don&#8217;t like to be forced to either.</p>

<h2>The Developer Audience</h2>

<p>Bootstrap makes no secret that it&#8217;s for everyone of all skill levels. That raises a bit of a red flag for me. I think its great that Bootstrap makes itself accessible to the newbie developer, but I feel like it also leaves something to be desired.</p>

<p>Consider the <a href="http://beeradvocate.com/beer/profile/1549/17141">312 Wheat Ale</a> by Goose Island. If you&#8217;ve never had it, 312 a decent beer. It&#8217;s a low ABV session ale. Easily drinkable, but the flavor is not all that compelling. <em>A lot of people like it.</em> Why? A lot of people like because it doesn&#8217;t upset anyone. People who aren&#8217;t beer geeks think they&#8217;re drinking a good beer (because, it&#8217;s not you know, Natty Ice) and beer geeks are only disappointed when there isn&#8217;t something better available.</p>

<p>Which brings me back to my point: things that appeal to the widest audience, while good, tend to be disappointing to the more experienced and technical audience.</p>

<p>I dislike the classes that Bootstrap uses. I find them unsemantic and they clutter up the markup. I dislike the defaults that Bootstrap uses. I find the styles annoying to overwrite at best and difficult to at worst.</p>

<h2>These frameworks together make our developer lives better</h2>

<p>While I rely heavily on Foundation, I do use some parts of Bootstrap: some JavaScript plugins, some CSS (for tables, badges, and labels). Ultimately, you should use whatever makes your project most successful. For me, that&#8217;s Foundation. It&#8217;s just a better fit for how I work and the tools I work with.</p>

<p>I offer a great amount of thanks to the developers of both of these projects, without which we&#8217;d be using underwhelming responsive grids. I&#8217;m not saying that one is &#8220;better&#8221; than another. Try both and use what is best for you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Plotting elements on a circle with CSS &amp; Ruby]]></title>
    <link href="http://nicinabox.com/blog/plotting-elements-on-a-circle-with-css-and-ruby/"/>
    <updated>2012-04-09T19:19:00-05:00</updated>
    <id>http://nicinabox.com/blog/plotting-elements-on-a-circle-with-css-and-ruby</id>
    <content type="html"><![CDATA[<p>I ran into a challenge today where I needed to plot elements in a circle using their CSS offset. I found a some <a href="http://snipt.net/guttersleeper/plot-points-on-circle/">javascript plot functions</a> that did nearly exactly what I wanted.</p>

<p>Here&#8217;s my solution in Ruby.</p>

<!-- more -->




<div><script src='https://gist.github.com/2347545.js?file='></script>
<noscript><pre><code>  def angle_to_radians(angle)
    Math::PI * (angle * -1.0 / 180)
  end

  def radians_to_cartesian(radian, radius, offset_x, offset_y)
    {
      :x =&gt; (offset_x + (radius * Math::sin(radian))).round,
      :y =&gt; (offset_y + (radius * Math::cos(radian))).round
    }
  end
</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redesign Octopress]]></title>
    <link href="http://nicinabox.com/blog/redesign-octopress/"/>
    <updated>2012-04-08T15:00:00-05:00</updated>
    <id>http://nicinabox.com/blog/redesign-octopress</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been meaning to restyle my Octopress to get away from the default theme. Not that there&#8217;s anything wrong with the default theme, it&#8217;s just, well, default.</p>

<!-- more -->


<p>I scraped pretty much all of the original styles, but retained things like code formatting. I updated the compass config to my new stylesheets directory and pulled included the necessary support files there.</p>

<p>Overall, I&#8217;m happy with it. Now that I&#8217;ve got it to a good, slimmed down starting point it will be easier to make changes to the layout.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shortcutting Heroku Deployments]]></title>
    <link href="http://nicinabox.com/blog/shortcutting-heroku-deployments/"/>
    <updated>2011-09-12T10:53:00-05:00</updated>
    <id>http://nicinabox.com/blog/shortcutting-heroku-deployments</id>
    <content type="html"><![CDATA[<p>If you are familiar with <a href="http://heroku.com">Heroku</a>, you may know that deploying is as easy as pushing to their remote repository:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git push heroku</span></code></pre></td></tr></table></div></figure>


<p>But, this can get really monotonous, especially if you&#8217;re frequently pushing to a staging app (then you have to specify the branch name as well). To make things a little easier I whipped up a quick shell function to make deployments a snap.</p>

<!--more-->


<p>We always name our Heroku remotes <em>staging</em> and <em>production</em>. To deploy to staging, for instance, just pass the branch name you want to deploy:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ deploy dev</span></code></pre></td></tr></table></div></figure>


<p>Here&#8217;s the function. Just drop it in your <code>.bashrc</code> (or whatever shell config you use).</p>

<div><script src='https://gist.github.com/1072008.js?file='></script>
<noscript><pre><code># $ deploy dev  // Deploys to staging
# $ deploy      // Deploys to production
function deploy() {
  if [[ $@ != &quot;&quot; ]]; then
    git push staging $@:master
  else
    git push production
  fi
}
</code></pre></noscript></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building a Kegerator]]></title>
    <link href="http://nicinabox.com/blog/building-a-kegerator/"/>
    <updated>2011-08-16T11:51:00-05:00</updated>
    <id>http://nicinabox.com/blog/building-a-kegerator</id>
    <content type="html"><![CDATA[<p>A couple months ago I decided I&#8217;d had enough of drinking stale, bottled beer and that the solution to this problem would be to build a kegerator and get the brewery to fill my keg with fresh brew. Of course, later on I found out that none of the breweries will actually fill personal kegs, at least here in Chicago. C&#8217;est la vie. I&#8217;ll be brewing my own batch soon to fill it instead.</p>

<p>Here is a little walkthrough of disassembling the the fridge and modifications that I made. I&#8217;m using a <a href="http://goo.gl/700Lb">Frigidaire FFPH44M4LB fridge</a>. It&#8217;s 4.4 cu. ft. and will fit 2 Cornelius kegs and a 5lb C02 tank in the back.</p>

<!--more-->


<h2>Gather your parts</h2>

<p>I sourced my parts from a couple different places. I bought a conversion kit from <a href="http://www.beveragefactory.com/">Beverage Factory</a> and a 5 gallon pin lock keg (used) from <a href="http://www.midwestsupplies.com/">Midwest Supplies</a>. All total it was about $240.</p>

<h2>Disassemble the fridge</h2>

<p>My fridge had a freezer/icebox in the top of it. It popped right out by removing a couple screws on the door and sliding out the shelf. I knew that since it had a freezer in the top, it probably had a gas line above it. <strong>If you drill and you cut the line you will ruin the fridge.</strong> Better safe than sorry.</p>

<h2>Remove the lid</h2>

<p>This is probably the hardest part. It&#8217;s glued down tight to the foam insulation and the sides of the fridge. Use a pry tool to slowly work your way around and remove it (You&#8217;ll want to glue it back on after you&#8217;re finished).</p>

<p><img src="http://farm6.static.flickr.com/5061/5846507268_d80bfc06a0_z.jpg" alt="" /></p>

<h2>Find the line</h2>

<p>I found <a href="http://www.homebrewtalk.com/f51/frigidaire-model-frc445gb-mini-fridge-kegerator-conversion-89013/">this thread</a> on Home Brew Talk to be extremely helpful. I found where the safe places to mount the tap probably were (in the front), but I wanted mine in the back. It was necessary to cut the insulation out to find the line (carefully, of course) so I could drill around it. I used a spatula, Leatherman, and a bicycle tire iron to remove the insulation.</p>

<p><img src="http://farm6.static.flickr.com/5151/5846506072_957fdab1da_z.jpg" alt="" /></p>

<p><img src="http://farm6.static.flickr.com/5076/5846499630_0c94547e1a_z.jpg" alt="" /></p>

<p><img src="http://farm4.static.flickr.com/3310/5846498544_7743e459fb_z_d.jpg" alt="" /></p>

<h2>Drill your holes for the tap</h2>

<p>You&#8217;ll want to line up everything so you can drill through to mount the tower. Run your lines through and put some excess insulation back in. I mounted a small piece of wood under the lid to help stabilize the tower. Remember, measure, and then measure again. And then do it again just for good measure.</p>

<p><img src="http://farm6.static.flickr.com/5187/5845943675_077f35b96d_z_d.jpg" alt="" /></p>

<h2>Cleanup, and fill it</h2>

<p>Once you fill the keg you&#8217;ll want to let it sit for close to 24 hours while it settles or else you&#8217;ll lose a lot of beer in foam, and no one likes that. You&#8217;ll probably need to tweak a bit a first to get it flowing nice. I keep a little thermometer in a cup of water to measure the temp.</p>

<p>Keg pressure: 10-12 psi
Temperature: 38 degrees</p>

<p><img src="http://farm7.static.flickr.com/6192/6049843861_605360b98a_z_d.jpg" alt="" /></p>

<p>Enjoy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Geektool Scripts]]></title>
    <link href="http://nicinabox.com/blog/geektool-scripts/"/>
    <updated>2009-04-19T22:29:00-05:00</updated>
    <id>http://nicinabox.com/blog/geektool-scripts</id>
    <content type="html"><![CDATA[<p><strong>UPDATE 8/15/2011:</strong> Most of these scripts have been <a href="http://rubygems.org/gems/geeklets2">repackaged in a gem</a>.</p>

<hr />

<p><nav class="try">
  <a class="download" href="https://github.com/nicinabox/Geektool-Scripts/zipball/master">Download <small>v1.7 (Github)</small></a>
</nav></p>

<p>These are an ever growing compilation of scripts and code snippets that I have written or collected in a format that’s easy to understand and use. If you need help feel free to email me at <a href="mailto:nic@nicinabox.com">nic@nicinabox.com</a>, <strong>but please read the documentation first</strong>.</p>

<p>I encourage you to checkout some of the Desktop screenshots on Flickr (some are very nice!) for ideas.If you have a script or something clever you&#8217;d like to add to this collection, please contact me.</p>

<p>These commands require that you actually install the scripts. Some are built into the system, but most are custom. For more information, check <code>readme.html</code> included in the download.</p>

<!--more-->


<p>This package includes the following:</p>

<ul>
<li>Network info</li>
<li>Unread Gmail</li>
<li>Uptime</li>
<li>Calendar (with current day denoted)</li>
<li>Weather</li>
<li>System Stats</li>
<li>Recent Music plays</li>
</ul>


<h2>Installing the scripts</h2>

<p>Note: this step can be skipped if you&#8217;re using the gem.</p>

<p>Copy files to a directory in your PATH. I recommend <code>/usr/local/bin</code>. This will make the commands accessible by just typing the name of it, eg.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ airport</span></code></pre></td></tr></table></div></figure>


<p>That&#8217;s it!</p>

<h2>Using the scripts</h2>

<p>After you&#8217;ve got them installed you&#8217;ll want to pop open Geektool and enter the command in the Command field. You should immediately see output on your desktop. For time sensitive scripts like weather you&#8217;ll probably want to set a refresh time of 30-60 seconds.</p>

<p>If you&#8217;re using the gem and RVM you need to include and extra line in the command. Geektool runs in a subshell and does not use custom PATHs specified in your <code>.bash_profile</code> or <code>.profile</code>. Simply tell Geektool to use your profile as the source of the subshell (the period means &#8220;source&#8221;).</p>

<figure class='code'><figcaption><span>command.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>. /Users/nic/.bash_profile <span class="c"># be sure to include this part if using the gem</span>
</span><span class='line'>weather -z 60614
</span></code></pre></td></tr></table></div></figure>


<p>Obviously substitute my username for your own shortname.</p>

<h3>Uptime</h3>

<p>Displays your system&#8217;s uptime.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>uptime | awk '{print "Uptime : " $3 " " $4 " " $5 }' | sed -e 's/.$//g'</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>uptime output </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Uptime : 25 days, 8:28</span></code></pre></td></tr></table></div></figure>


<h3>Network Info</h3>

<p>Displays your Wifi or Ethernet IP. Also see IP script</p>

<h4>Internal IP</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ifconfig en1 | grep "inet " | awk '{print $2}'</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>network output </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>192.168.1.2</span></code></pre></td></tr></table></div></figure>


<h4>External IP</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -s www.whatismyip.com/automation/n09230945.asp | awk {'print "External : " $1'}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>network output </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>External: 72.45.123.12</span></code></pre></td></tr></table></div></figure>


<h3>Calendar</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cal | sed "s/^/ /;s/$/ /;s/ $(date +%e) / $(date +%e | sed 's/./#/g') /"</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>calendar output </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>July 2009 
</span><span class='line'>Su Mo Tu We Th Fr Sa 
</span><span class='line'>          1  2  3  4 
</span><span class='line'> 5  6  7  8  9 ## 11 
</span><span class='line'>12 13 14 15 16 17 18 
</span><span class='line'>19 20 21 22 23 24 25 
</span><span class='line'>26 27 28 29 30 31</span></code></pre></td></tr></table></div></figure>


<h3>Memory Usage</h3>

<p>Prints out total Memory Usage</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>top -l 1 | awk '/PhysMem/ {print "Used: " $8}'
</span><span class='line'>top -l 1 | awk '/PhysMem/ {print "Inactive:  " $6+$10"M"}'</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>memory output </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Used:  1769M
</span><span class='line'>Inactive:  688M</span></code></pre></td></tr></table></div></figure>


<h3>CPU Usage</h3>

<h4>Horizontal</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>top -l 1| awk '/CPU usage/ {print $6, $7, $8, $9, $10, $11, $12, $13}'</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>CPU output </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CPU usage: 22.22% user, 71.11% sys, 6.67% idle</span></code></pre></td></tr></table></div></figure>


<h4>Vertical</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo CPU usage
</span><span class='line'>top -l 1| awk '/CPU usage/ {print $8, $9}'
</span><span class='line'>top -l 1| awk '/CPU usage/ {print $10, $11}'
</span><span class='line'>top -l 1| awk '/CPU usage/ {print $12, $13}'</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>CPU output </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CPU usage
</span><span class='line'>22.22% user,
</span><span class='line'>71.11% sys,
</span><span class='line'>6.67% idle</span></code></pre></td></tr></table></div></figure>


<h3>Unread Gmail</h3>

<p>This script requires a username and password. You must edit it before use. Replace <code>USERNAME</code> <code>PASSWORD</code> with your username and password. <em>Credits to Greg Newman.</em></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gmail</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Unread Gmail output </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>3 Unread</span></code></pre></td></tr></table></div></figure>


<h3>IP Address</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ipaddress</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>IP Address output </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Ethernet : INACTIVE
</span><span class='line'>Airport : 161.45.27.132</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Color Palette]]></title>
    <link href="http://nicinabox.com/blog/color-palette/"/>
    <updated>2009-03-12T19:36:00-05:00</updated>
    <id>http://nicinabox.com/blog/color-palette</id>
    <content type="html"><![CDATA[<p>This is a color palette that I&#8217;ve compiled. I recommend using a tool like &#8220;0to255&#8221;:http://0to255.com to find shades of these colors to your liking. Enjoy!</p>

<!--more-->


<p><link rel="stylesheet" href="http://nicinabox.com/partials/colors/stylesheets/styles.css">
<link rel="stylesheet" href="http://nicinabox.com/partials/colors/stylesheets/colors.css"></p>

<ul id="colors">
  <li><div class="color_30boxes_purple"><span class="color_hex">#5B5B95</span><span class="color_name">30Boxes Purple </span></div></li>
  <li><div class="color_43_things_gold"><span class="color_hex">#C79810</span><span class="color_name">43 Things Gold </span></div></li>
  <li><div class="color_43things_mustard"><span class="color_hex">#C69D18</span><span class="color_name">43Things Mustard </span></div></li>
  <li><div class="color_basecamp_green"><span class="color_hex">#6BBA70</span><span class="color_name">BaseCamp Green </span></div></li>
  <li><div class="color_blinklist_ghost_white"><span class="color_hex">#F7F7FF</span><span class="color_name">BlinkList Ghost White </span></div></li>
  <li><div class="color_blinklist_orange"><span class="color_hex">#FF6600</span><span class="color_name">BlinkList Orange </span></div></li>
  <li><div class="color_bloglines_blue"><span class="color_hex">#1393C0</span><span class="color_name">BlogLines Blue </span></div></li>
  <li><div class="color_bloglines_turquoise"><span class="color_hex">#4CADD4</span><span class="color_name">BlogLines Turquoise </span></div></li>
  <li><div class="color_boing_boing_red"><span class="color_hex">#FF0000</span><span class="color_name">Boing Boing Red </span></div></li>
  <li><div class="color_box_net_blue"><span class="color_hex">#277FBA</span><span class="color_name">Box.net Blue</span></div></li>
  <li><div class="color_calendarhub_blue"><span class="color_hex">#57A9FD</span><span class="color_name">CalendarHub Blue </span></div></li>
  <li><div class="color_chaamp_fire_brick"><span class="color_hex">#B71313</span><span class="color_name">Chaamp Fire Brick </span></div></li>
  <li><div class="color_clipmarks_dark_khaki"><span class="color_hex">#9AC65C</span><span class="color_name">ClipMarks Dark Khaki </span></div></li>
  <li><div class="color_cocomment_blue"><span class="color_hex">#0e63fd</span><span class="color_name">CoComment Blue </span></div></li>
  <li><div class="color_confluence_green"><span class="color_hex">#99cc33</span><span class="color_name">Confluence Green </span></div></li>
  <li><div class="color_counterspot_pale_goldenrod"><span class="color_hex">#D6EBAD</span><span class="color_name">CounterSpot Pale Goldenrod </span></div></li>
  <li><div class="color_counterspot_powder_blue"><span class="color_hex">#ADE3EF</span><span class="color_name">CounterSpot Powder Blue </span></div></li>
  <li><div class="color_craigslist_blue"><span class="color_hex">#3775e2</span><span class="color_name">CraigsList Blue </span></div></li>
  <li><div class="color_crazyegg_green"><span class="color_hex">#8dbb01</span><span class="color_name">CrazyEgg Green </span></div></li>
  <li><div class="color_daylife_orange"><span class="color_hex">#FFB640</span><span class="color_name">DayLife Orange </span></div></li>
  <li><div class="color_del_icio_us_grey"><span class="color_hex">#EFEFEF</span><span class="color_name">Del.icio.us Grey</span></div></li>
  <li><div class="color_digg_blue"><span class="color_hex">#1B5891</span><span class="color_name">Digg Blue </span></div></li>
  <li><div class="color_digg_blue_2"><span class="color_hex">#356AA0</span><span class="color_name">Digg Blue 2 </span></div></li>
  <li><div class="color_digg_light_yellow"><span class="color_hex">#FFF298</span><span class="color_name">Digg Light Yellow </span></div></li>
  <li><div class="color_dodgeball_red"><span class="color_hex">#E24602</span><span class="color_name">DodgeBall Red </span></div></li>
  <li><div class="color_drop_books_blue"><span class="color_hex">#4CAAE4</span><span class="color_name">Drop Books Blue </span></div></li>
  <li><div class="color_ebay_yellow"><span class="color_hex">#FFCC00</span><span class="color_name">Ebay Yellow </span></div></li>
  <li><div class="color_etsy_brown"><span class="color_hex">#CF5700</span><span class="color_name">Etsy Brown </span></div></li>
  <li><div class="color_etsy_vermillion"><span class="color_hex">#D15600</span><span class="color_name">Etsy Vermillion </span></div></li>
  <li><div class="color_eventful_purple"><span class="color_hex">#5D82FF</span><span class="color_name">Eventful Purple </span></div></li>
  <li><div class="color_eyespot_blue"><span class="color_hex">#00BADA</span><span class="color_name">EyeSpot Blue </span></div></li>
  <li><div class="color_facebook_blue"><span class="color_hex">#3B5999</span><span class="color_name">FaceBook Blue </span></div></li>
  <li><div class="color_feedburner_blue"><span class="color_hex">#0170CA</span><span class="color_name">FeedBurner Blue </span></div></li>
  <li><div class="color_feedburner_red"><span class="color_hex">#EB003A</span><span class="color_name">Feedburner Red </span></div></li>
  <li><div class="color_feedster_green"><span class="color_hex">#98CC00</span><span class="color_name">Feedster Green </span></div></li>
  <li><div class="color_firefox_maroon"><span class="color_hex">#BD1D01</span><span class="color_name">Firefox Maroon </span></div></li>
  <li><div class="color_flickr_light_blue"><span class="color_hex">#0061DE</span><span class="color_name">Flickr Light Blue </span></div></li>
  <li><div class="color_flickr_pink"><span class="color_hex">#FF0084</span><span class="color_name">Flickr Pink </span></div></li>
  <li><div class="color_flock_black"><span class="color_hex">#0F0F0F</span><span class="color_name">Flock Black </span></div></li>
  <li><div class="color_flock_blue"><span class="color_hex">#4096EE</span><span class="color_name">Flock Blue </span></div></li>
  <li><div class="color_frappr_red"><span class="color_hex">#A71A10</span><span class="color_name">Frappr Red </span></div></li>
  <li><div class="color_furl_blue"><span class="color_hex">#025AA2</span><span class="color_name">Furl Blue </span></div></li>
  <li><div class="color_furl_red"><span class="color_hex">#E84C1F</span><span class="color_name">Furl Red </span></div></li>
  <li><div class="color_gimme20_hot_pink"><span class="color_hex">#FD65C2</span><span class="color_name">Gimme20 Hot Pink </span></div></li>
  <li><div class="color_gmail_alice_blue"><span class="color_hex">#EFEFFF</span><span class="color_name">Gmail Alice Blue </span></div></li>
  <li><div class="color_gmail_blue"><span class="color_hex">#C3D9FF</span><span class="color_name">Gmail Blue </span></div></li>
  <li><div class="color_gnoos_red"><span class="color_hex">#D50000</span><span class="color_name">Gnoos Red </span></div></li>
  <li><div class="color_google_white"><span class="color_hex">#FFFFFF</span><span class="color_name">Google White </span></div></li>
  <li><div class="color_hi5_orange"><span class="color_hex">#EF9A19</span><span class="color_name">Hi5 Orange </span></div></li>
  <li><div class="color_interactive_action_yellow"><span class="color_hex">#FFFF88</span><span class="color_name">Interactive Action Yellow </span></div></li>
  <li><div class="color_jaiku_green"><span class="color_hex">#96C63F</span><span class="color_name">Jaiku Green </span></div></li>
  <li><div class="color_judys_book_blue"><span class="color_hex">#69DBFF</span><span class="color_name">Judys Book Blue </span></div></li>
  <li><div class="color_karmadu_gold"><span class="color_hex">#FFC300</span><span class="color_name">Karmadu Gold </span></div></li>
  <li><div class="color_kiko_light_steel_blue"><span class="color_hex">#9CB6DE</span><span class="color_name">Kiko Light Steel Blue </span></div></li>
  <li><div class="color_last_fm_crimson"><span class="color_hex">#D61C39</span><span class="color_name">Last.fm Crimson</span></div></li>
  <li><div class="color_last_fm_red"><span class="color_hex">#D10039</span><span class="color_name">Last.fm Red</span></div></li>
  <li><div class="color_lifelog_pink"><span class="color_hex">#FE198E</span><span class="color_name">Lifelog Pink </span></div></li>
  <li><div class="color_lijit_green"><span class="color_hex">#BEDB8A</span><span class="color_name">Lijit Green </span></div></li>
  <li><div class="color_linkedin_blue"><span class="color_hex">#1A7FB3</span><span class="color_name">LinkedIn Blue </span></div></li>
  <li><div class="color_listable_coral"><span class="color_hex">#FF7B38</span><span class="color_name">Listable Coral </span></div></li>
  <li><div class="color_listable_orange"><span class="color_hex">#FF7638</span><span class="color_name">Listable Orange </span></div></li>
  <li><div class="color_live_journal_blue"><span class="color_hex">#3D5381</span><span class="color_name">Live Journal Blue </span></div></li>
  <li><div class="color_ma_gnolia_creme"><span class="color_hex">#F3F3CC</span><span class="color_name">Ma.gnolia Creme</span></div></li>
  <li><div class="color_ma_gnolia_yellow"><span class="color_hex">#FEBF0F</span><span class="color_name">Ma.gnolia Yellow</span></div></li>
  <li><div class="color_magnolia_mag_nolia"><span class="color_hex">#F9F7ED</span><span class="color_name">Magnolia Mag.nolia</span></div></li>
  <li><div class="color_mashable_pink"><span class="color_hex">#F28FBF</span><span class="color_name">Mashable Pink </span></div></li>
  <li><div class="color_meebo_orange"><span class="color_hex">#FF910D</span><span class="color_name">Meebo Orange </span></div></li>
  <li><div class="color_meetup_red"><span class="color_hex">#E51837</span><span class="color_name">MeetUp Red </span></div></li>
  <li><div class="color_microsoft_blue"><span class="color_hex">#87C1E7</span><span class="color_name">Microsoft Blue </span></div></li>
  <li><div class="color_minti_green"><span class="color_hex">#009F59</span><span class="color_name">Minti Green </span></div></li>
  <li><div class="color_minutesinaminute_teal"><span class="color_hex">#00457B</span><span class="color_name">MinutesInAMinute Teal </span></div></li>
  <li><div class="color_minutesinaminute_blue"><span class="color_hex">#2971AD</span><span class="color_name">MinutesInAMinute Blue </span></div></li>
  <li><div class="color_moodmill_pastel"><span class="color_hex">#FA9B65</span><span class="color_name">Moodmill Pastel </span></div></li>
  <li><div class="color_mozilla_blue"><span class="color_hex">#3F4C6B</span><span class="color_name">Mozilla Blue </span></div></li>
  <li><div class="color_mozilla_red"><span class="color_hex">#FF1A00</span><span class="color_name">Mozilla Red </span></div></li>
  <li><div class="color_myspace_blue"><span class="color_hex">#003399</span><span class="color_name">MySpace Blue </span></div></li>
  <li><div class="color_netscape_aqua"><span class="color_hex">#478898</span><span class="color_name">Netscape Aqua </span></div></li>
  <li><div class="color_netvibes_green"><span class="color_hex">#62B857</span><span class="color_name">NetVibes Green </span></div></li>
  <li><div class="color_newsvine_green"><span class="color_hex">#006E2E</span><span class="color_name">NewsVine Green </span></div></li>
  <li><div class="color_newsvine_green_2"><span class="color_hex">#00722D</span><span class="color_name">NewsVine Green 2 </span></div></li>
  <li><div class="color_ning_green"><span class="color_hex">#339900</span><span class="color_name">Ning Green </span></div></li>
  <li><div class="color_odeo_pink"><span class="color_hex">#EC449B</span><span class="color_name">Odeo Pink </span></div></li>
  <li><div class="color_onmylist_brown"><span class="color_hex">#5A471C</span><span class="color_name">OnMyList Brown </span></div></li>
  <li><div class="color_oodle_black"><span class="color_hex">#030303</span><span class="color_name">Oodle Black </span></div></li>
  <li><div class="color_openid_orange"><span class="color_hex">#FF6200</span><span class="color_name">OpenID Orange </span></div></li>
  <li><div class="color_pageflakes_grey"><span class="color_hex">#D9DDE9</span><span class="color_name">Pageflakes Grey </span></div></li>
  <li><div class="color_pandora_antique_white"><span class="color_hex">#EFEBCE</span><span class="color_name">Pandora Antique White </span></div></li>
  <li><div class="color_pandora_blue"><span class="color_hex">#295E92</span><span class="color_name">Pandora Blue </span></div></li>
  <li><div class="color_pingomatic_lime_green"><span class="color_hex">#28CF21</span><span class="color_name">PingOMatic Lime Green </span></div></li>
  <li><div class="color_pownce_black"><span class="color_hex">#383121</span><span class="color_name">Pownce Black </span></div></li>
  <li><div class="color_qoop_mint"><span class="color_hex">#CDEB8B</span><span class="color_name">Qoop Mint </span></div></li>
  <li><div class="color_reddit_red"><span class="color_hex">#FF4600</span><span class="color_name">Reddit Red </span></div></li>
  <li><div class="color_riya_green"><span class="color_hex">#6DC646</span><span class="color_name">Riya Green </span></div></li>
  <li><div class="color_rollyo_red"><span class="color_hex">#CC0000</span><span class="color_name">Rollyo Red </span></div></li>
  <li><div class="color_rss_orange"><span class="color_hex">#FF7400</span><span class="color_name">RSS Orange </span></div></li>
  <li><div class="color_ruby_on_rails_red"><span class="color_hex">#B02B2C</span><span class="color_name">Ruby on Rails Red </span></div></li>
  <li><div class="color_ryze_red"><span class="color_hex">#E51905</span><span class="color_name">Ryze Red </span></div></li>
  <li><div class="color_say_so_red"><span class="color_hex">#C00000</span><span class="color_name">Say so Red </span></div></li>
  <li><div class="color_scouta_orange"><span class="color_hex">#F78325</span><span class="color_name">Scouta Orange </span></div></li>
  <li><div class="color_seomoz_maroon"><span class="color_hex">#924357</span><span class="color_name">SEOmoz Maroon </span></div></li>
  <li><div class="color_shadows_grey"><span class="color_hex">#36393D</span><span class="color_name">Shadows Grey </span></div></li>
  <li><div class="color_shiny_silver"><span class="color_hex">#EEEEEE</span><span class="color_name">Shiny Silver </span></div></li>
  <li><div class="color_shopify_green"><span class="color_hex">#87BE2F</span><span class="color_name">Shopify Green </span></div></li>
  <li><div class="color_skype_blue"><span class="color_hex">#6CD0F6</span><span class="color_name">Skype Blue </span></div></li>
  <li><div class="color_slashdot_green"><span class="color_hex">#03646A</span><span class="color_name">Slashdot Green </span></div></li>
  <li><div class="color_slide_share_aqua"><span class="color_hex">#00A8AA</span><span class="color_name">Slide Share Aqua </span></div></li>
  <li><div class="color_smug_mug_green"><span class="color_hex">#89C122</span><span class="color_name">Smug Mug Green </span></div></li>
  <li><div class="color_spoke_green"><span class="color_hex">#9AC80D</span><span class="color_name">Spoke Green </span></div></li>
  <li><div class="color_spotplex_blue"><span class="color_hex">#6B9CC9</span><span class="color_name">SpotPlex Blue </span></div></li>
  <li><div class="color_spurl_blue"><span class="color_hex">#6699CC</span><span class="color_name">Spurl Blue </span></div></li>
  <li><div class="color_spurl_grey"><span class="color_hex">#505050</span><span class="color_name">Spurl Grey </span></div></li>
  <li><div class="color_squidoo_blue"><span class="color_hex">#21628C</span><span class="color_name">Squidoo Blue </span></div></li>
  <li><div class="color_squidoo_mustard"><span class="color_hex">#E5791E</span><span class="color_name">Squidoo Mustard </span></div></li>
  <li><div class="color_stumbleupon_blue"><span class="color_hex">#057DB9</span><span class="color_name">StumbleUpon Blue </span></div></li>
  <li><div class="color_stumbleupon_green"><span class="color_hex">#2ACC54</span><span class="color_name">StumbleUpon Green </span></div></li>
  <li><div class="color_swicki_black"><span class="color_hex">#000000</span><span class="color_name">Swicki Black </span></div></li>
  <li><div class="color_tagworld_green"><span class="color_hex">#5EBE8F</span><span class="color_name">Tagworld Green </span></div></li>
  <li><div class="color_tailrank_red"><span class="color_hex">#780000</span><span class="color_name">TailRank Red </span></div></li>
  <li><div class="color_techcrunch_green"><span class="color_hex">#008C00</span><span class="color_name">TechCrunch Green </span></div></li>
  <li><div class="color_technorati_lime_green"><span class="color_hex">#4ABA00</span><span class="color_name">Technorati Lime Green </span></div></li>
  <li><div class="color_the_broth_grey"><span class="color_hex">#7F7F7F</span><span class="color_name">The Broth Grey </span></div></li>
  <li><div class="color_thembid_red"><span class="color_hex">#EA0101</span><span class="color_name">ThemBid Red </span></div></li>
  <li><div class="color_threadless_blue"><span class="color_hex">#003368</span><span class="color_name">Threadless Blue </span></div></li>
  <li><div class="color_twitter_blue"><span class="color_hex">#AFEAEE</span><span class="color_name">Twitter Blue </span></div></li>
  <li><div class="color_upcoming_yellow"><span class="color_hex">#FCBD00</span><span class="color_name">Upcoming Yellow </span></div></li>
  <li><div class="color_vimeo_grey"><span class="color_hex">#E7E7DE</span><span class="color_name">Vimeo Grey </span></div></li>
  <li><div class="color_voo2do_com_lemon_chiffon"><span class="color_hex">#FFFFBD</span><span class="color_name">Voo2Do.com Lemon Chiffon</span></div></li>
  <li><div class="color_vox_red"><span class="color_hex">#D71920</span><span class="color_name">Vox Red </span></div></li>
  <li><div class="color_wayfaring_green"><span class="color_hex">#128F34</span><span class="color_name">Wayfaring Green </span></div></li>
  <li><div class="color_wikipedia_black"><span class="color_hex">#0F0E13</span><span class="color_name">WikiPedia Black </span></div></li>
  <li><div class="color_wikipedia_lavender"><span class="color_hex">#DEEBFF</span><span class="color_name">Wikipedia Lavender </span></div></li>
  <li><div class="color_wordpress_blue"><span class="color_hex">#174C89</span><span class="color_name">WordPress Blue </span></div></li>
  <li><div class="color_writeboard_green"><span class="color_hex">#64BB69</span><span class="color_name">WriteBoard Green </span></div></li>
  <li><div class="color_writely_olive"><span class="color_hex">#73880A</span><span class="color_name">Writely Olive </span></div></li>
  <li><div class="color_writely_sandy_brown"><span class="color_hex">#F3AE48</span><span class="color_name">Writely Sandy Brown </span></div></li>
  <li><div class="color_xanga_green"><span class="color_hex">#4DB848</span><span class="color_name">Xanga Green </span></div></li>
  <li><div class="color_yahoo_red"><span class="color_hex">#FC0234</span><span class="color_name">Yahoo Red </span></div></li>
  <li><div class="color_youtube_tomato"><span class="color_hex">#FF6666</span><span class="color_name">YouTube Tomato </span></div></li>
  <li><div class="color_ziki_blue"><span class="color_hex">#03A0FA</span><span class="color_name">Ziki Blue </span></div></li>       
</ul>



]]></content>
  </entry>
  
</feed>
